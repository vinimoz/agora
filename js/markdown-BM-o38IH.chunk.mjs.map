{"version":3,"file":"markdown-BM-o38IH.chunk.mjs","sources":["../node_modules/@nextcloud/vue/dist/chunks/NcNoteCard-C8JB31rn.mjs","../src/utils/permissions.ts","../src/stores/appSettings.ts","../src/components/Base/modules/CardDiv.vue","../src/components/Base/modules/RadioGroupDiv.vue"],"sourcesContent":["import '../assets/NcNoteCard-DGpRZQtS.css';\nimport { defineComponent, computed, createElementBlock, openBlock, normalizeClass, renderSlot, createElementVNode, createVNode, unref, createCommentVNode, toDisplayString } from \"vue\";\nimport { f as mdiAlert, g as mdiInformation, h as mdiCheckboxMarkedCircle, i as mdiAlertDecagram } from \"./mdi-B9TPxVka.mjs\";\nimport { N as NcIconSvgWrapper } from \"./NcIconSvgWrapper-CprKb_SE.mjs\";\nimport { _ as _export_sfc } from \"./_plugin-vue_export-helper-1tPrXgE0.mjs\";\nconst _hoisted_1 = [\"role\"];\nconst _hoisted_2 = {\n  key: 0,\n  class: \"notecard__heading\"\n};\nconst _hoisted_3 = { class: \"notecard__text\" };\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  __name: \"NcNoteCard\",\n  props: {\n    heading: { default: void 0 },\n    showAlert: { type: Boolean },\n    text: { default: void 0 },\n    type: { default: \"warning\" }\n  },\n  setup(__props) {\n    const props = __props;\n    const shouldShowAlert = computed(() => props.showAlert || props.type === \"error\");\n    const iconPath = computed(() => {\n      switch (props.type) {\n        case \"error\":\n          return mdiAlertDecagram;\n        case \"success\":\n          return mdiCheckboxMarkedCircle;\n        case \"info\":\n          return mdiInformation;\n        case \"warning\":\n        default:\n          return mdiAlert;\n      }\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        class: normalizeClass([\"notecard\", `notecard--${_ctx.type}`]),\n        role: shouldShowAlert.value ? \"alert\" : \"note\"\n      }, [\n        renderSlot(_ctx.$slots, \"icon\", {}, () => [\n          createVNode(unref(NcIconSvgWrapper), {\n            path: iconPath.value,\n            class: normalizeClass([\"notecard__icon\", { \"notecard__icon--heading\": _ctx.heading }]),\n            inline: \"\"\n          }, null, 8, [\"path\", \"class\"])\n        ], true),\n        createElementVNode(\"div\", null, [\n          _ctx.heading ? (openBlock(), createElementBlock(\"p\", _hoisted_2, toDisplayString(_ctx.heading), 1)) : createCommentVNode(\"\", true),\n          renderSlot(_ctx.$slots, \"default\", {}, () => [\n            createElementVNode(\"p\", _hoisted_3, toDisplayString(_ctx.text), 1)\n          ], true)\n        ])\n      ], 10, _hoisted_1);\n    };\n  }\n});\nconst NcNoteCard = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__scopeId\", \"data-v-1893b364\"]]);\nexport {\n  NcNoteCard as N\n};\n//# sourceMappingURL=NcNoteCard-C8JB31rn.mjs.map\n","// SPDX-FileCopyrightText: 2023 Nextcloud contributors\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport { useSessionStore } from '../stores/session.ts'\nimport { useAppSettingsStore } from '../stores/appSettings.ts'\n\nexport interface InquiryTypeSettings {\n  supportInquiry: boolean\n  commentInquiry: boolean\n  attachFileInquiry: boolean\n  shareInquiry?: boolean\n  editorType: string\n}\n\nexport interface InquiryTypeRights {\n  supportInquiry: boolean\n  commentInquiry: boolean\n  attachFileInquiry: boolean\n  shareInquiry?: boolean\n  editorType: string\n}\n\nexport interface ModeratorRights {\n  changeInquiryStatus?: boolean\n  deleteInquiry?: boolean\n  archiveInquiry?: boolean\n  transferInquiry?: boolean\n  modifyInquiry?: boolean\n  addShares?: boolean\n  addSharesExternal?: boolean\n  deanonymize?: boolean\n  seeUsernames?: boolean\n}\n\nexport interface OfficialRights {\n  changeInquiryStatus?: boolean\n  deleteInquiry?: boolean\n  archiveInquiry?: boolean\n  transferInquiry?: boolean\n  modifyInquiry?: boolean\n}\n\n// Exportez aussi les valeurs par défaut\nexport const DefaultInquiryTypeRights: Record<string, InquiryTypeRights> = {\n  proposal: {\n    supportInquiry: true,\n    commentInquiry: true,\n    attachFileInquiry: true,\n    shareInquiry: true,\n    editorType: 'wysiwyg',\n  },\n  debate: {\n    supportInquiry: true,\n    commentInquiry: false,\n    attachFileInquiry: false,\n    shareInquiry: true,\n    editorType: 'texteditor',\n  },\n  petition: {\n    supportInquiry: true,\n    commentInquiry: true,\n    attachFileInquiry: true,\n    shareInquiry: true,\n    editorType: 'wysiwyg',\n  },\n  project: {\n    supportInquiry: true,\n    commentInquiry: true,\n    attachFileInquiry: true,\n    shareInquiry: true,\n    editorType: 'texteditor',\n  },\n  grievance: {\n    supportInquiry: true,\n    commentInquiry: true,\n    attachFileInquiry: true,\n    shareInquiry: true,\n    editorType: 'wysiwyg',\n  },\n  suggestion: {\n    supportInquiry: true,\n    commentInquiry: false,\n    attachFileInquiry: false,\n    shareInquiry: true,\n    editorType: 'textarea',\n  },\n  official: {\n    supportInquiry: false,\n    commentInquiry: false,\n    attachFileInquiry: true,\n    shareInquiry: true,\n    editorType: 'textarea',\n  },\n}\n\nexport const DefaultModeratorRights: ModeratorRights = {\n  changeInquiryStatus: true,\n  deleteInquiry: true,\n  archiveInquiry: true,\n  transferInquiry: true,\n  modifyInquiry: true,\n  addShares: true,\n  addSharesExternal: false,\n  deanonymize: false,\n}\n\nexport const DefaultOfficialRights: OfficialRights = {\n  changeInquiryStatus: false,\n  deleteInquiry: false,\n  archiveInquiry: false,\n  transferInquiry: false,\n  modifyInquiry: false,\n}\n\n/**\n * User TYPE\n */\nexport enum UserType {\n  Guest = 'guest',\n  User = 'user',\n  Moderator = 'moderator',\n  Admin = 'admin',\n  Owner = 'owner',\n}\n\n/**\n * Content type\n */\nexport enum ContentType {\n  Inquiry = 'inquiry',\n  Comment = 'comment',\n  Support = 'support',\n  Attachment = 'attachment',\n  Share = 'share',\n}\n\n/**\n * Interface rights permission\n */\nexport interface PermissionContext {\n  userType: UserType\n  contentType: ContentType\n  isOwner: boolean\n  isPublic: boolean\n  isLocked: boolean\n  isExpired: boolean\n  isDeleted: boolean\n  isArchived: boolean\n  hasGroupRestrictions: boolean\n  userGroups: string[]\n  allowedGroups: string[]\n  inquiryType?: string\n}\n\n// GET METHODS\n\nfunction getCurrentUserType(): UserType {\n  const sessionStore = useSessionStore()\n  const currentUser = sessionStore.currentUser\n\n  if (!currentUser) return UserType.Guest\n  if (currentUser.isAdmin) return UserType.Admin\n  if (currentUser.isModerator) return UserType.Moderator\n  if (currentUser.isOfficial) return UserType.User\n  return UserType.User\n}\n\nfunction getCurrentUserGroups(): string[] {\n  const sessionStore = useSessionStore()\n  const currentUser = sessionStore.currentUser\n  return currentUser?.groups || []\n}\n\nexport function getCurrentModeratorRights(): ModeratorRights | null {\n  const sessionStore = useSessionStore()\n  const appSettings = useAppSettingsStore()\n  const currentUser = sessionStore.currentUser\n  return currentUser?.isModerator ? appSettings.moderatorRights : null\n}\n\nexport function getCurrentOfficialRights(): OfficialRights | null {\n  const sessionStore = useSessionStore()\n  const appSettings = useAppSettingsStore()\n  const currentUser = sessionStore.currentUser\n  return currentUser?.isOfficial ? appSettings.officialRights : null\n}\n\nfunction isContentOwner(contentOwnerId: string): boolean {\n  const sessionStore = useSessionStore()\n  const currentUser = sessionStore.currentUser\n  return currentUser?.id === contentOwnerId\n}\n\nexport function canInquiryTypePerformAction(\n  inquiryType: string,\n  action: keyof InquiryTypeSettings\n): boolean {\n  const sessionStore = useSessionStore()\n  const typeRights = sessionStore.appSettings.inquiryTypeRights[inquiryType]\n  return typeRights?.[action] ?? false\n}\n\nfunction hasGroupAccess(context: PermissionContext): boolean {\n  if (!context.hasGroupRestrictions || context.userType === UserType.Guest) {\n    return true\n  }\n\n  if (context.userType === UserType.Admin || context.userType === UserType.Moderator) {\n    return true\n  }\n\n  return context.userGroups.some((group) => context.allowedGroups.includes(group))\n}\n\nfunction isContentBlocked(context: PermissionContext): boolean {\n  return context.isArchived || context.isDeleted || context.isLocked || context.isExpired\n}\n\nexport function canViewToggle(context: PermissionContext): boolean {\n  return [UserType.Admin, UserType.Owner, UserType.Moderator, UserType.User].includes(\n    context.userType\n  )\n}\n\n/**\n * Vérifie si l'utilisateur peut supprimer\n * Admin et Owner toujours, autres selon leurs droits\n * @param context\n */\nexport function canDelete(context: PermissionContext): boolean {\n  if (context.isDeleted) return false\n\n  if (context.userType === UserType.Admin || context.isOwner) {\n    return true\n  }\n\n  if (context.userType === UserType.Moderator) {\n    const moderatorRights = getCurrentModeratorRights()\n    return moderatorRights?.deleteInquiry ?? false\n  }\n\n  if (context.userType === UserType.User) {\n    const officialRights = getCurrentOfficialRights()\n    return officialRights?.deleteInquiry ?? false\n  }\n\n  return false\n}\n\n/**\n * Vérifie si l'utilisateur peut archiver\n * Admin et Owner toujours, autres selon leurs droits\n * @param context\n */\nexport function canRestore(context: PermissionContext): boolean {\n  if (!(context.isArchived || context.isDeleted)) return false\n\n  if (context.userType === UserType.Admin || context.isOwner) {\n    return true\n  }\n\n  if (context.userType === UserType.Moderator) {\n    const moderatorRights = getCurrentModeratorRights()\n    return moderatorRights?.archiveInquiry ?? false\n  }\n\n  if (context.userType === UserType.User) {\n    const officialRights = getCurrentOfficialRights()\n    return officialRights?.archiveInquiry ?? false\n  }\n\n  return false\n}\n\n/**\n * Vérifie si l'utilisateur peut archiver\n * Admin et Owner toujours, autres selon leurs droits\n * @param context\n */\nexport function canArchive(context: PermissionContext): boolean {\n  if (context.isArchived || context.isDeleted) return false\n\n  if (context.userType === UserType.Admin || context.isOwner) {\n    return true\n  }\n\n  if (context.userType === UserType.Moderator) {\n    const moderatorRights = getCurrentModeratorRights()\n    return moderatorRights?.archiveInquiry ?? false\n  }\n\n  if (context.userType === UserType.User) {\n    const officialRights = getCurrentOfficialRights()\n    return officialRights?.archiveInquiry ?? false\n  }\n\n  return false\n}\n\n/**\n * Vérifie si l'utilisateur peut transférer\n * Admin et Owner toujours, autres selon leurs droits\n * @param context\n */\nexport function canTransfer(context: PermissionContext): boolean {\n  if (context.userType === UserType.Admin || context.isOwner) {\n    return true\n  }\n\n  if (context.userType === UserType.Moderator) {\n    const moderatorRights = getCurrentModeratorRights()\n    return moderatorRights?.transferInquiry ?? false\n  }\n\n  if (context.userType === UserType.User) {\n    const officialRights = getCurrentOfficialRights()\n    return officialRights?.transferInquiry ?? false\n  }\n\n  return false\n}\n\n/**\n * Vérifie si l'utilisateur peut modérer\n * Admin toujours, Moderator selon droits, Official selon droits\n * @param context\n */\nexport function canModerate(context: PermissionContext): boolean {\n  if (context.userType === UserType.Admin) {\n    return true\n  }\n\n  if (context.userType === UserType.Moderator) {\n    const moderatorRights = getCurrentModeratorRights()\n    return moderatorRights?.changeInquiryStatus ?? false\n  }\n\n  if (context.userType === UserType.User) {\n    const officialRights = getCurrentOfficialRights()\n    return officialRights?.changeInquiryStatus ?? false\n  }\n\n  return false\n}\n\n/**\n * Vérifie si l'utilisateur peut éditer\n * Admin et Owner toujours, autres selon leurs droits\n * @param context\n */\nexport function canEdit(context: PermissionContext): boolean {\n  if (context.isLocked || context.isArchived || context.isDeleted) {\n    return false\n  }\n  if (context.userType === UserType.Admin || context.isOwner) {\n    return true\n  }\n\n  if (context.userType === UserType.Moderator) {\n    const moderatorRights = getCurrentModeratorRights()\n    return moderatorRights?.modifyInquiry ?? false\n  }\n\n  if (context.userType === UserType.User) {\n    const officialRights = getCurrentOfficialRights()\n    return officialRights?.modifyInquiry ?? false\n  }\n\n  return false\n}\n\n/**\n * Vérifie si l'utilisateur peut commenter\n * Dépend des droits InquiryTypeRights, même pour les Admins\n * @param context\n */\nexport function canComment(context: PermissionContext): boolean {\n  const appSettings = useAppSettingsStore()\n\n  if (isContentBlocked(context)) {\n    return false\n  }\n\n  if (context.inquiryType && !canInquiryTypePerformAction(context.inquiryType, 'commentInquiry')) {\n    return false\n  }\n\n  if (!hasGroupAccess(context)) {\n    return false\n  }\n\n  if (context.userType === UserType.Guest) {\n    return context.isPublic && appSettings.allowGuestComments\n  }\n\n  return true\n}\n\n/**\n * Vérifie si l'utilisateur peut supporter\n * Dépend des droits InquiryTypeRights, même pour les Admins\n * @param context\n */\nexport function canSupport(context: PermissionContext): boolean {\n  const appSettings = useSessionStore().appSettings\n\n  if (isContentBlocked(context)) {\n    return false\n  }\n\n  if (context.inquiryType && !canInquiryTypePerformAction(context.inquiryType, 'supportInquiry')) {\n    return false\n  }\n  if (!hasGroupAccess(context)) {\n    return false\n  }\n\n  if (context.userType === UserType.Guest) {\n    return context.isPublic && appSettings.allowGuestSupport\n  }\n\n  return true\n}\n\n/**\n * Vérifie si l'utilisateur peut partager\n * Dépend des droits InquiryTypeRights, même pour les Admins\n * @param context\n */\nexport function canShare(context: PermissionContext): boolean {\n  const appSettings = useAppSettingsStore()\n\n  if (context.isArchived || context.isDeleted) {\n    return false\n  }\n\n  if (context.inquiryType && !canInquiryTypePerformAction(context.inquiryType, 'shareInquiry')) {\n    return false\n  }\n\n  if (!appSettings.allowSharing) {\n    return false\n  }\n\n  if (context.userType === UserType.Guest) {\n    return false\n  }\n\n  return canModerate(context) // Le partage nécessite généralement des droits de modération\n}\n\n/**\n * Vérifie si l'utilisateur peut attacher des fichiers\n * Dépend des droits InquiryTypeRights, même pour les Admins\n * @param context\n */\nexport function canAttachFile(context: PermissionContext): boolean {\n  if (context.isArchived || context.isDeleted || context.isLocked) {\n    return false\n  }\n\n  if (\n    context.inquiryType &&\n    !canInquiryTypePerformAction(context.inquiryType, 'attachFileInquiry')\n  ) {\n    return false\n  }\n\n  if (!hasGroupAccess(context)) {\n    return false\n  }\n\n  if (context.userType === UserType.Guest) {\n    return false\n  }\n\n  return true\n}\n\nexport function canView(context: PermissionContext): boolean {\n  const appSettings = useAppSettingsStore()\n\n  if (context.isDeleted) {\n    return [UserType.Moderator, UserType.Admin, UserType.Owner].includes(context.userType)\n  }\n\n  if (context.isArchived) {\n    return [UserType.Moderator, UserType.Admin, UserType.Owner, UserType.User].includes(\n      context.userType\n    )\n  }\n\n  if (context.hasGroupRestrictions) {\n    if (\n      !hasGroupAccess(context) &&\n      context.userType !== UserType.Admin &&\n      context.userType !== UserType.Moderator\n    ) {\n      return false\n    }\n  }\n\n  if (context.userType === UserType.Guest) {\n    return context.isPublic && appSettings.allowPublicAccess\n  }\n\n  return true\n}\n\nexport function canCreate(context: PermissionContext): boolean {\n  const appSettings = useAppSettingsStore()\n\n  if (context.userType === UserType.Guest) {\n    return appSettings.allowGuestCreation\n  }\n  return true\n}\n\nexport function canLock(context: PermissionContext): boolean {\n  return [UserType.Moderator, UserType.Admin].includes(context.userType)\n}\n\nexport function createPermissionContextForContent(\n  contentType: ContentType,\n  contentOwnerId: string,\n  isPublic: boolean = true,\n  isLocked: boolean = false,\n  isExpired: boolean = false,\n  isDeleted: boolean = false,\n  isArchived: boolean = false,\n  hasGroupRestrictions: boolean = false,\n  allowedGroups: string[] = [],\n  inquiryType?: string\n): PermissionContext {\n  const userType = getCurrentUserType()\n  const userGroups = getCurrentUserGroups()\n  const isOwner = isContentOwner(contentOwnerId)\n\n  return {\n    userType,\n    contentType,\n    isOwner,\n    isPublic,\n    isLocked,\n    isExpired,\n    isDeleted,\n    isArchived,\n    hasGroupRestrictions,\n    userGroups,\n    allowedGroups,\n    inquiryType,\n  }\n}\n\nexport default {\n  // Enums\n  UserType,\n  ContentType,\n\n  // Default values\n  DefaultInquiryTypeRights,\n  DefaultModeratorRights,\n  DefaultOfficialRights,\n\n  // Permission functions\n  canView,\n  canViewToggle,\n  canComment,\n  canSupport,\n  canShare,\n  canAttachFile,\n  canDelete,\n  canArchive,\n  canRestore,\n  canTransfer,\n  canModerate,\n  canEdit,\n  canCreate,\n  canLock,\n\n  // Context functions\n  createPermissionContextForContent,\n\n  // Helper functions\n  getCurrentUserType,\n  getCurrentUserGroups,\n  getCurrentModeratorRights,\n  getCurrentOfficialRights,\n  canInquiryTypePerformAction,\n}\n","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { defineStore } from 'pinia'\nimport { AppSettingsAPI } from '../Api/index.ts'\nimport { Logger } from '../helpers/index.ts'\nimport { BaseEntry } from '../Types/index.ts'\nimport { AxiosError } from '@nextcloud/axios'\n\nimport type { InquiryTypeRights, ModeratorRights, OfficialRights } from '../utils/permissions.ts'\n\nimport { DefaultModeratorRights, DefaultOfficialRights } from '../utils/permissions.ts'\n\nexport type UpdateType = 'noInquirying' | 'periodicInquirying' | 'longInquirying'\n\nexport type Group = {\n  id: string\n  userId: string\n  displayName: string\n  emailAddress: string\n  isNoUser: boolean\n  type: string\n}\n\n// Simple interfaces for category and location tables\nexport interface Category {\n  id: number\n  name: string\n  parentId: number | null\n}\n\nexport interface Location {\n  id: number\n  name: string\n  parentId: number | null\n}\n\nexport interface ModerationStatus {\n  id: number\n  inquiryType: string\n  statusKey: string\n  label: string\n  description?: string\n  isFinal: boolean\n  icon: string\n  order?: number\n}\n\nexport type AppSettings = {\n  allAccessGroups: string[]\n  allowCombo: boolean\n  allowPublicShares: boolean\n  allowAllAccess: boolean\n  allowInquiryCreation: boolean\n  allowInquiryDownload: boolean\n  autoArchive: boolean\n  autoArchiveOffset: number\n  autoDelete: boolean\n  autoDeleteOffset: number\n  defaultPrivacyUrl: string\n  defaultImprintUrl: string\n  disclaimer: string\n  imprintUrl: string\n  legalTermsInEmail: boolean\n  privacyUrl: string\n  showMailAddresses: boolean\n  showLogin: boolean\n  unrestrictedOwner: boolean\n  updateType: UpdateType\n  useActivity: boolean\n  useCollaboration: boolean\n  useSiteLegalTerms: boolean\n  navigationInquiriesInList: boolean\n  finalPrivacyUrl: string\n  finalImprintUrl: string\n  comboGroups: string[]\n  publicSharesGroups: string[]\n  inquiryCreationGroups: string[]\n  inquiryDownloadGroups: string[]\n  showMailAddressesGroups: string[]\n  unrestrictedOwnerGroups: string[]\n  categoryTab: Category[]\n  locationTab: Location[]\n  moderationStatusTab: ModerationStatus[]\n  groups: Group[]\n  inquiryTypeRights: Record<string, InquiryTypeRights>\n  moderatorRights: ModeratorRights\n  officialRights: OfficialRights\n  status: {\n    loadingGroups: boolean\n  }\n}\n\nexport const useAppSettingsStore = defineStore('appSettings', {\n  state: (): AppSettings => ({\n    allAccessGroups: [],\n    allowCombo: true,\n    allowPublicShares: true,\n    allowAllAccess: true,\n    allowInquiryCreation: true,\n    allowInquiryDownload: true,\n    autoArchive: false,\n    autoDelete: false,\n    autoArchiveOffset: 30,\n    autoDeleteOffset: 30,\n    defaultPrivacyUrl: '',\n    defaultImprintUrl: '',\n    disclaimer: '',\n    imprintUrl: '',\n    legalTermsInEmail: false,\n    privacyUrl: '',\n    showMailAddresses: false,\n    showLogin: true,\n    unrestrictedOwner: false,\n    updateType: 'noInquirying',\n    useActivity: false,\n    useCollaboration: true,\n    useSiteLegalTerms: true,\n    navigationInquiriesInList: true,\n    finalPrivacyUrl: '',\n    finalImprintUrl: '',\n    comboGroups: [],\n    publicSharesGroups: [],\n    inquiryCreationGroups: [],\n    inquiryDownloadGroups: [],\n    showMailAddressesGroups: [],\n    unrestrictedOwnerGroups: [],\n    categoryTab: [],\n    locationTab: [],\n    moderationStatusTab: [],\n    groups: [],\n    inquiryTypeRights: {} as Record<string, InquiryTypeRights>,\n    moderatorRights: { ...DefaultModeratorRights } as ModeratorRights,\n    officialRights: { ...DefaultOfficialRights } as OfficialRights,\n    status: {\n      loadingGroups: false,\n    },\n  }),\n\n  actions: {\n    async load(): Promise<void> {\n      try {\n        const response = await AppSettingsAPI.getAppSettings()\n        // Initialize moderationStatusTab with defaults if empty\n        const settings = response.data.appSettings\n\n        this.$patch(settings)\n        return settings\n      } catch (error) {\n        Logger.error('Error getting appSettings', { error })\n      }\n    },\n\n    async write(): Promise<void> {\n      try {\n        const response = await AppSettingsAPI.writeAppSettings(this.$state)\n        this.$patch(response.data.appSettings)\n      } catch (error) {\n        if ((error as AxiosError)?.code === 'ERR_CANCELED') {\n          return\n        }\n        Logger.error('Error writing appSettings', {\n          error,\n          appSettings: this.$state,\n        })\n        throw error\n      }\n    },\n\n    loadGroups(query: string): void {\n      const debouncedLoad = this.$debounce(async () => {\n        this.status.loadingGroups = true\n\n        try {\n          const response = await AppSettingsAPI.getGroups(query)\n          this.groups = response.data.groups\n          this.status.loadingGroups = false\n        } catch (error) {\n          if ((error as AxiosError)?.code === 'ERR_CANCELED') {\n            return\n          }\n          Logger.error('Error getting groups', { error })\n          this.status.loadingGroups = false\n        }\n      }, 500)\n\n      debouncedLoad()\n    },\n    // STORE FOR MODERATION STATUS\n\n    // Get statuses for a specific inquiry type\n    getStatusesForInquiryType(inquiryType: string): ModerationStatus[] {\n      return this.moderationStatusTab\n        .filter((status) => status.inquiryType === inquiryType)\n        .sort((a, b) => (a.order || 0) - (b.order || 0))\n    },\n\n    // Add a new status for an inquiry type\n    async addStatusForInquiryType(\n      inquiryType: string,\n      status: Omit<ModerationStatus, 'inquiryType' | 'order'>\n    ): Promise<void> {\n      const existingStatuses = this.getStatusesForInquiryType(inquiryType)\n      const newOrder = existingStatuses.length\n      const newStatus = {\n        inquiryType,\n        ...status,\n        order: newOrder,\n      }\n\n      try {\n        const response = await AppSettingsAPI.addModerationStatus(newStatus)\n        if (response.data.moderationStatus) {\n          this.moderationStatusTab.push(response.data.moderationStatus)\n        } else {\n          this.moderationStatusTab.push(newStatus)\n        }\n      } catch (error) {\n        Logger.error('Error adding moderation status', { error })\n        this.moderationStatusTab.push(newStatus)\n      }\n    },\n\n    // Update a status for an inquiry type\n    async updateStatusForInquiryType(\n      inquiryType: string,\n      statusId: string,\n      updates: Partial<ModerationStatus>\n    ): Promise<void> {\n      const index = this.moderationStatusTab.findIndex(\n        (s) => s.inquiryType === inquiryType && s.id === statusId\n      )\n\n      if (index === -1) {\n        return\n      }\n      const originalStatus = { ...this.moderationStatusTab[index] }\n      this.moderationStatusTab[index] = {\n        ...this.moderationStatusTab[index],\n        ...updates,\n      }\n\n      try {\n        await AppSettingsAPI.updateModerationStatus(statusId, {\n          ...originalStatus,\n          ...updates,\n        })\n      } catch (error) {\n        Logger.error('Error updating moderation status', { error })\n        this.moderationStatusTab[index] = originalStatus\n      }\n    },\n\n    // Delete a status for an inquiry type\n    async deleteStatusForInquiryType(inquiryType: string, statusId: string): Promise<void> {\n      this.moderationStatusTab = this.moderationStatusTab.filter(\n        (s) => !(s.inquiryType === inquiryType && s.id === statusId)\n      )\n      // Reorder remaining statuses\n      this.reorderStatuses(inquiryType)\n      try {\n        await AppSettingsAPI.deleteModerationStatus(statusId)\n      } catch (error) {\n        Logger.error('Error deleting moderation status', { error })\n        this.moderationStatusTab.splice(backupIndex, 0, backupStatus)\n        this.reorderStatuses(inquiryType)\n      }\n    },\n\n    // Reorder statuses for an inquiry type\n    reorderStatuses(inquiryType: string): void {\n      const statuses = this.getStatusesForInquiryType(inquiryType)\n      statuses.forEach((status, index) => {\n        const globalIndex = this.moderationStatusTab.findIndex(\n          (s) => s.inquiryType === inquiryType && s.id === status.statusId\n        )\n        if (globalIndex !== -1) {\n          this.moderationStatusTab[globalIndex].order = index\n        }\n      })\n    },\n\n    // Move status up in order\n    moveStatusUp(inquiryType: string, statusId: string): void {\n      const statuses = this.getStatusesForInquiryType(inquiryType)\n      const currentIndex = statuses.findIndex((s) => s.id === statusId)\n\n      if (currentIndex > 0) {\n        // Swap orders with previous status\n        const previousStatus = statuses[currentIndex - 1]\n        const currentStatus = statuses[currentIndex]\n\n        // Update orders in the main array\n        const previousGlobalIndex = this.moderationStatusTab.findIndex(\n          (s) => s.inquiryType === inquiryType && s.statusId === previousStatus.statusId\n        )\n        const currentGlobalIndex = this.moderationStatusTab.findIndex(\n          (s) => s.inquiryType === inquiryType && s.statusId === currentStatus.statusId\n        )\n\n        if (previousGlobalIndex !== -1 && currentGlobalIndex !== -1) {\n          const tempOrder = this.moderationStatusTab[currentGlobalIndex].order\n          this.moderationStatusTab[currentGlobalIndex].order =\n            this.moderationStatusTab[previousGlobalIndex].order\n          this.moderationStatusTab[previousGlobalIndex].order = tempOrder\n        }\n\n        // Reorder to ensure consistency\n        this.reorderStatuses(inquiryType)\n      }\n    },\n\n    // Move status down in order\n    moveStatusDown(inquiryType: string, statusId: string): void {\n      const statuses = this.getStatusesForInquiryType(inquiryType)\n      const currentIndex = statuses.findIndex((s) => s.id === statusId)\n\n      if (currentIndex < statuses.length - 1) {\n        // Swap orders with next status\n        const nextStatus = statuses[currentIndex + 1]\n        const currentStatus = statuses[currentIndex]\n\n        // Update orders in the main array\n        const nextGlobalIndex = this.moderationStatusTab.findIndex(\n          (s) => s.inquiryType === inquiryType && s.statusId === nextStatus.statusId\n        )\n        const currentGlobalIndex = this.moderationStatusTab.findIndex(\n          (s) => s.inquiryType === inquiryType && s.statusId === currentStatus.statusId\n        )\n\n        if (nextGlobalIndex !== -1 && currentGlobalIndex !== -1) {\n          const tempOrder = this.moderationStatusTab[currentGlobalIndex].order\n          this.moderationStatusTab[currentGlobalIndex].order =\n            this.moderationStatusTab[nextGlobalIndex].order\n          this.moderationStatusTab[nextGlobalIndex].order = tempOrder\n        }\n\n        // Reorder to ensure consistency\n        this.reorderStatuses(inquiryType)\n      }\n    },\n\n    // STORE FOR CATEGORY AND LOCATION MANAGEMENT\n    async addCategory(name: string, parentId: number = 0): Promise<void> {\n      const maxId = this.categoryTab.length > 0 ? Math.max(...this.categoryTab.map((c) => c.id)) : 0\n      const newId = maxId + 1\n\n      try {\n        await AppSettingsAPI.addCategory({\n          name,\n          parentId,\n        })\n\n        this.categoryTab.push({\n          id: newId,\n          name,\n          parentId,\n        })\n      } catch (error) {\n        Logger.error('Error getting appSettings', { error })\n      }\n    },\n\n    async updateCategory(id: number, name: string, parentId: number): Promise<void> {\n      const category = this.categoryTab.find((c) => c.id === id)\n      try {\n        await AppSettingsAPI.updateCategory(id, name, parentId)\n\n        if (category) {\n          category.name = name\n          category.parentId = parentId\n        }\n      } catch (error) {\n        Logger.error('Error getting appSettings', { error })\n      }\n    },\n\n    async deleteCategory(id: number): Promise<void> {\n      const deleteRecursive = (categoryId: number) => {\n        const children = this.categoryTab.filter((c) => c.parentId === categoryId)\n\n        children.forEach((child) => {\n          deleteRecursive(child.id)\n        })\n\n        this.categoryTab = this.categoryTab.filter((c) => c.id !== categoryId)\n      }\n      try {\n        await AppSettingsAPI.deleteCategory(id)\n        deleteRecursive(id)\n      } catch (error) {\n        Logger.error('Error deleting category', { error })\n      }\n    },\n\n    async addLocation(name: string, parentId: number = 0): Promise<void> {\n      const maxId = this.locationTab.length > 0 ? Math.max(...this.locationTab.map((l) => l.id)) : 0\n      const newId = maxId + 1\n\n      try {\n        await AppSettingsAPI.addLocation({\n          name,\n          parentId,\n        })\n\n        this.locationTab.push({\n          id: newId,\n          name,\n          parentId,\n        })\n      } catch (error) {\n        Logger.error('Error getting appSettings', { error })\n      }\n    },\n\n    async updateLocation(id: number, name: string, parentId: number): Promise<void> {\n      const location = this.locationTab.find((l) => l.id === id)\n      try {\n        await AppSettingsAPI.updateLocation(id, name, parentId)\n\n        if (location) {\n          location.name = name\n          location.parentId = parentId\n        }\n      } catch (error) {\n        Logger.error('Error getting appSettings', { error })\n      }\n    },\n\n    async deleteLocation(id: number): Promise<void> {\n      const deleteRecursive = (locationId: number) => {\n        const children = this.locationTab.filter((l) => l.parentId === locationId)\n\n        children.forEach((child) => {\n          deleteRecursive(child.id)\n        })\n\n        this.locationTab = this.locationTab.filter((l) => l.id !== locationId)\n      }\n\n      try {\n        await AppSettingsAPI.deleteLocation(id)\n\n        deleteRecursive(id)\n      } catch (error) {\n        Logger.error('Error deleting location', { error })\n      }\n    },\n\n    // Helper to build tree structure from flat list\n    buildTree<T extends { id: number; parentId: number }>(\n      items: T[],\n      parentId: number = 0\n    ): (T & { children: T[] })[] {\n      return items\n        .filter((item) => item.parentId === parentId)\n        .map((item) => ({\n          ...item,\n          children: this.buildTree(items, item.id),\n        }))\n    },\n\n    // Get parent options for select dropdowns\n    getParentOptions(type: 'category' | 'location', excludeId: number | null = null) {\n      const items = type === 'category' ? this.categoryTab : this.locationTab\n      const tree = this.buildTree(items)\n\n      const options = [{ id: 0, name: 'No parent' }]\n\n      const flattenTree = (nodes: BaseEntry[], level = 0) => {\n        let results: BaseEntry[] = []\n        nodes.forEach((node) => {\n          if (node.id !== excludeId) {\n            results.push({\n              id: node.id,\n              name: `${'--'.repeat(level)} ${node.name}`,\n            })\n          }\n          if (node.children && node.children.length > 0) {\n            results = results.concat(flattenTree(node.children, level + 1))\n          }\n        })\n        return results\n      }\n\n      return options.concat(flattenTree(tree))\n    },\n  },\n})\n","<!--\n  - SPDX-FileCopyrightText: 2018 Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<script setup lang=\"ts\">\nimport NcNoteCard from '@nextcloud/vue/components/NcNoteCard'\n</script>\n\n<template>\n  <NcNoteCard v-bind=\"$attrs\">\n    <div class=\"card-content\">\n      <div class=\"left-card-side\">\n        <slot name=\"default\" />\n      </div>\n      <div class=\"right-card-side\">\n        <slot name=\"button\" />\n      </div>\n    </div>\n  </NcNoteCard>\n</template>\n\n<style lang=\"scss\">\n.left-card-side {\n  flex: 1 0 180px;\n  ul {\n    list-style: initial;\n    margin-inline-start: 2rem;\n  }\n}\n\n.right-card-side {\n  flex: 0;\n  padding-inline-end: 8px;\n}\n\n.notecard {\n  & > * {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .card-content {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    flex: 1;\n    column-gap: 8px;\n  }\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2018 Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport NcCheckboxRadioSwitch from '@nextcloud/vue/components/NcCheckboxRadioSwitch'\n\nexport type CheckboxOption = {\n  value: string\n  label: string\n}\n\ninterface Props {\n  id?: string\n  options: CheckboxOption[]\n}\n\nconst { id, options } = defineProps<Props>()\nconst model = defineModel<string>({ required: true })\n\nconst RandId = () =>\n  Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, '')\n    .slice(2, 12)\n\nconst emit = defineEmits(['update'])\n\nconst elementId = computed(() => id ?? `rg-${RandId()}`)\n</script>\n\n<template>\n  <div class=\"radio-group-div\">\n    <NcCheckboxRadioSwitch\n      v-for=\"(option, index) in options\"\n      :key=\"option.value\"\n      v-model=\"model\"\n      :value=\"option.value\"\n      :name=\"elementId + index\"\n      type=\"radio\"\n      @update:model-value=\"emit('update')\"\n    >\n      {{ option.label }}\n    </NcCheckboxRadioSwitch>\n  </div>\n</template>\n"],"names":["_hoisted_1","_hoisted_2","_hoisted_3","_sfc_main","createElementVNode","ContentType","appSettings","AppSettingsAPI","_openBlock","_createBlock","_normalizeProps","_guardReactiveProps","_withCtx","_createElementVNode","_renderSlot","_useModel","_createElementBlock","_Fragment","_renderList","_createTextVNode","_toDisplayString"],"mappings":"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","x_google_ignoreList":[0]}