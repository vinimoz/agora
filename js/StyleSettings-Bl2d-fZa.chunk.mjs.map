{"version":3,"file":"StyleSettings-Bl2d-fZa.chunk.mjs","sources":["../src/stores/preferences.ts","../src/components/Settings/UserSettings/FeatureSettings.vue","../src/components/Settings/UserSettings/StyleSettings.vue"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2024 Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { defineStore } from 'pinia'\nimport { CalendarAPI, UserSettingsAPI } from '../Api/index.ts'\nimport { Logger } from '../helpers/index.ts'\nimport { AxiosError } from '@nextcloud/axios'\n\nexport type ViewMode = 'table-view' | 'list-view'\n\nexport type UserPreferences = {\n  calendarPeek: boolean\n  checkCalendars: string[]\n  checkCalendarsHoursBefore: number\n  checkCalendarsHoursAfter: number\n  defaultViewInquiry: ViewMode\n  inquiryCombo: number[]\n  relevantOffset: number\n  useNewInquiryDialogInNavigation: boolean\n  useNewInquiryInInquiryist: boolean\n  useCommentsAlternativeStyling: boolean\n  useAlternativeStyling: boolean\n  verboseInquiriesList: boolean\n}\n\nexport type SessionSettings = {\n  manualViewInquiry: '' | ViewMode\n}\n\nexport type Calendar = {\n  key: string\n  name: string\n  calendarUri: string\n  displayColor: string\n  permissions: number\n}\n\nexport type Preferences = {\n  user: UserPreferences\n  session: SessionSettings\n  availableCalendars: Calendar[]\n}\n\nexport const usePreferencesStore = defineStore('preferences', {\n  state: (): Preferences => ({\n    user: {\n      calendarPeek: false,\n      checkCalendars: [],\n      checkCalendarsHoursBefore: 0,\n      checkCalendarsHoursAfter: 0,\n      defaultViewInquiry: 'table-view',\n      inquiryCombo: [],\n      relevantOffset: 30,\n      useNewInquiryDialogInNavigation: false,\n      useNewInquiryInInquiryist: false,\n      useCommentsAlternativeStyling: false,\n      useAlternativeStyling: false,\n      verboseInquiriesList: false,\n    },\n    session: {\n      manualViewInquiry: '',\n    },\n    availableCalendars: [],\n  }),\n\n  getters: {\n    viewInquiry(state): ViewMode {\n      if (state.session.manualViewInquiry) {\n        return state.session.manualViewInquiry\n      }\n      if (window.innerWidth > 480) {\n        return state.user.defaultViewInquiry\n      }\n      return 'list-view'\n    },\n\n    useNcAppNavigationNew(state): boolean {\n      return !state.user.useNewInquiryDialogInNavigation && !state.user.useNewInquiryInInquiryist\n    },\n\n    useActionAddInquiryInNavigation(state): boolean {\n      return state.user.useNewInquiryDialogInNavigation && !state.user.useNewInquiryInInquiryist\n    },\n  },\n\n  actions: {\n    setCalendars(payload: { calendars: Calendar[] }) {\n      this.availableCalendars = payload.calendars\n    },\n\n    addCheckCalendar(calendar: Calendar) {\n      this.user.checkCalendars.push(calendar.key)\n      this.write()\n    },\n\n    removeCheckCalendar(calendar: Calendar) {\n      const index = this.user.checkCalendars.indexOf(calendar.key)\n      if (index !== -1) {\n        this.user.checkCalendars.splice(index, 1)\n      }\n      this.write()\n    },\n\n    setViewInquiry(viewMode: ViewMode) {\n      this.session.manualViewInquiry = viewMode\n    },\n\n    async load(): Promise<void> {\n      try {\n        const response = await UserSettingsAPI.getUserSettings()\n        this.$patch({ user: response.data.preferences })\n      } catch (error) {\n        if ((error as AxiosError)?.code === 'ERR_CANCELED') {\n          return\n        }\n        this.$reset()\n        throw error\n      }\n    },\n\n    async write(): Promise<void> {\n      try {\n        const response = await UserSettingsAPI.writeUserSettings(this.user)\n        this.$patch({ user: response.data.preferences })\n      } catch (error) {\n        if ((error as AxiosError)?.code === 'ERR_CANCELED') {\n          return\n        }\n        Logger.error('Error writing preferences', {\n          error,\n          preferences: this.user,\n        })\n        throw error\n      }\n    },\n\n    async getCalendars() {\n      try {\n        const response = await CalendarAPI.getCalendars()\n        // this.availableCalendars = response.data.calendars\n        this.setCalendars({ calendars: response.data.calendars })\n        return response\n      } catch (error) {\n        if ((error as AxiosError)?.code === 'ERR_CANCELED') {\n          return\n        }\n        throw error\n      }\n    },\n  },\n})\n","<!--\n  - SPDX-FileCopyrightText: 2018 Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<script setup>\nimport { computed } from 'vue'\nimport { InputDiv } from '../../Base/index.ts'\nimport { t } from '@nextcloud/l10n'\n\nimport NcCheckboxRadioSwitch from '@nextcloud/vue/components/NcCheckboxRadioSwitch'\n\nimport { usePreferencesStore } from '../../../stores/preferences.ts'\n\nconst preferencesStore = usePreferencesStore()\n\nconst defaultViewInquiry = computed({\n  get() {\n    return preferencesStore.user.defaultViewInquiry === 'list-view'\n  },\n  set(value) {\n    preferencesStore.user.defaultViewInquiry = value ? 'list-view' : 'table-view'\n  },\n})\n</script>\n\n<template>\n  <div>\n    <div class=\"user_settings\">\n      <NcCheckboxRadioSwitch\n        v-model=\"defaultViewInquiry\"\n        type=\"switch\"\n        @update:model-value=\"preferencesStore.write()\"\n      >\n        {{ t('agora', 'Proposal agora inquiry default view to list view') }}\n      </NcCheckboxRadioSwitch>\n      <div class=\"settings_details\">\n        {{\n          t(\n            'agora',\n            'Check this, if you prefer to display text inquiry in grid view. The initial default is list view.'\n          )\n        }}\n      </div>\n    </div>\n\n    <div class=\"user_settings\">\n      <NcCheckboxRadioSwitch\n        v-model=\"preferencesStore.user.verboseInquiriesList\"\n        type=\"switch\"\n        @update:model-value=\"preferencesStore.write()\"\n      >\n        {{ t('agora', 'Verbose inquiry list') }}\n      </NcCheckboxRadioSwitch>\n      <div class=\"settings_details\">\n        {{ t('agora', 'Check this for more inquiry information in the overview.') }}\n      </div>\n    </div>\n\n    <div class=\"user_settings\">\n      <InputDiv\n        v-model=\"preferencesStore.user.relevantOffset\"\n        type=\"number\"\n        inputmode=\"numeric\"\n        use-num-modifiers\n        :label=\"\n          t(\n            'agora',\n            'Enter the amount of days, inquiries without activity stay in the relevant list:'\n          )\n        \"\n        @change=\"preferencesStore.write()\"\n      />\n    </div>\n  </div>\n</template>\n","<!--\n  - SPDX-FileCopyrightText: 2018 Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<script setup>\nimport { t } from '@nextcloud/l10n'\n\nimport NcCheckboxRadioSwitch from '@nextcloud/vue/components/NcCheckboxRadioSwitch'\n\nimport { usePreferencesStore } from '../../../stores/preferences.ts'\nconst preferencesStore = usePreferencesStore()\n</script>\n\n<template>\n  <div>\n    <b> {{ t('agora', 'The style settings are still experimental!') }}</b>\n\n    <div class=\"user_settings\">\n      <NcCheckboxRadioSwitch\n        v-model=\"preferencesStore.user.useNewInquiryDialogInNavigation\"\n        type=\"switch\"\n        @update:model-value=\"preferencesStore.write()\"\n      >\n        {{\n          t('agora', \"Use modal 'Add inquiry ' dialog instead of embedded dialog in Navigation bar\")\n        }}\n      </NcCheckboxRadioSwitch>\n    </div>\n\n    <div class=\"user_settings\">\n      <NcCheckboxRadioSwitch\n        v-model=\"preferencesStore.user.useNewInquiryInInquiryist\"\n        type=\"switch\"\n        @update:model-value=\"preferencesStore.write()\"\n      >\n        {{\n          t(\n            'agora',\n            \"Use 'Add inquiry ' as button in inquiry list instead of inside the navigation\"\n          )\n        }}\n      </NcCheckboxRadioSwitch>\n    </div>\n\n    <div class=\"user_settings\">\n      <NcCheckboxRadioSwitch\n        v-model=\"preferencesStore.user.useCommentsAlternativeStyling\"\n        type=\"switch\"\n        @update:model-value=\"preferencesStore.write()\"\n      >\n        {{ t('agora', 'Use alternative styling for the comments sidebar') }}\n      </NcCheckboxRadioSwitch>\n    </div>\n    <div class=\"user_settings\">\n      <NcCheckboxRadioSwitch\n        v-model=\"preferencesStore.user.useAlternativeStyling\"\n        type=\"switch\"\n        @update:model-value=\"preferencesStore.write()\"\n      >\n        {{ t('agora', 'Use alternative inquiry page styling') }}\n      </NcCheckboxRadioSwitch>\n    </div>\n  </div>\n</template>\n"],"names":["calendar","UserSettingsAPI","CalendarAPI","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_createElementBlock","_createElementVNode","_createVNode","_toDisplayString"],"mappings":"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"}