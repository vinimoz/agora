{"version":3,"file":"markdown-COVOixFZ.chunk.mjs","sources":["../../../node_modules/@nextcloud/vue/dist/chunks/NcNoteCard-C8JB31rn.mjs","../../../src/utils/permissions.ts","../../../src/stores/appSettings.ts","../../../src/components/Base/modules/CardDiv.vue","../../../src/components/Base/modules/RadioGroupDiv.vue"],"sourcesContent":["import '../assets/NcNoteCard-DGpRZQtS.css';\nimport { defineComponent, computed, createElementBlock, openBlock, normalizeClass, renderSlot, createElementVNode, createVNode, unref, createCommentVNode, toDisplayString } from \"vue\";\nimport { f as mdiAlert, g as mdiInformation, h as mdiCheckboxMarkedCircle, i as mdiAlertDecagram } from \"./mdi-B9TPxVka.mjs\";\nimport { N as NcIconSvgWrapper } from \"./NcIconSvgWrapper-CprKb_SE.mjs\";\nimport { _ as _export_sfc } from \"./_plugin-vue_export-helper-1tPrXgE0.mjs\";\nconst _hoisted_1 = [\"role\"];\nconst _hoisted_2 = {\n  key: 0,\n  class: \"notecard__heading\"\n};\nconst _hoisted_3 = { class: \"notecard__text\" };\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  __name: \"NcNoteCard\",\n  props: {\n    heading: { default: void 0 },\n    showAlert: { type: Boolean },\n    text: { default: void 0 },\n    type: { default: \"warning\" }\n  },\n  setup(__props) {\n    const props = __props;\n    const shouldShowAlert = computed(() => props.showAlert || props.type === \"error\");\n    const iconPath = computed(() => {\n      switch (props.type) {\n        case \"error\":\n          return mdiAlertDecagram;\n        case \"success\":\n          return mdiCheckboxMarkedCircle;\n        case \"info\":\n          return mdiInformation;\n        case \"warning\":\n        default:\n          return mdiAlert;\n      }\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        class: normalizeClass([\"notecard\", `notecard--${_ctx.type}`]),\n        role: shouldShowAlert.value ? \"alert\" : \"note\"\n      }, [\n        renderSlot(_ctx.$slots, \"icon\", {}, () => [\n          createVNode(unref(NcIconSvgWrapper), {\n            path: iconPath.value,\n            class: normalizeClass([\"notecard__icon\", { \"notecard__icon--heading\": _ctx.heading }]),\n            inline: \"\"\n          }, null, 8, [\"path\", \"class\"])\n        ], true),\n        createElementVNode(\"div\", null, [\n          _ctx.heading ? (openBlock(), createElementBlock(\"p\", _hoisted_2, toDisplayString(_ctx.heading), 1)) : createCommentVNode(\"\", true),\n          renderSlot(_ctx.$slots, \"default\", {}, () => [\n            createElementVNode(\"p\", _hoisted_3, toDisplayString(_ctx.text), 1)\n          ], true)\n        ])\n      ], 10, _hoisted_1);\n    };\n  }\n});\nconst NcNoteCard = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__scopeId\", \"data-v-1893b364\"]]);\nexport {\n  NcNoteCard as N\n};\n//# sourceMappingURL=NcNoteCard-C8JB31rn.mjs.map\n","// SPDX-FileCopyrightText: 2023 Nextcloud contributors\n// SPDX-License-Identifier: AGPL-3.0-or-later\n\nimport { useSessionStore } from '../stores/session.ts'\nimport { useAppSettingsStore } from '../stores/appSettings.ts'\n\nexport interface InquiryTypeSettings {\n  supportInquiry: boolean;\n  commentInquiry: boolean;\n  attachFileInquiry: boolean;\n  shareInquiry?: boolean;\n  editorType: string;\n}\n\n\nexport interface InquiryTypeRights {\n  supportInquiry: boolean;\n  commentInquiry: boolean;\n  attachFileInquiry: boolean;\n  shareInquiry?: boolean;\n  editorType: string;\n}\n\n\nexport interface ModeratorRights {\n  changeInquiryStatus?: boolean;\n  deleteInquiry?: boolean;\n  archiveInquiry?: boolean;\n  transferInquiry?: boolean;\n  modifyInquiry?: boolean;\n  addShares?: boolean;\n  addSharesExternal?: boolean;\n  deanonymize?: boolean;\n  seeUsernames?: boolean;\n}\n\nexport interface OfficialRights {\n  changeInquiryStatus?: boolean;\n  deleteInquiry?: boolean;\n  archiveInquiry?: boolean;\n  transferInquiry?: boolean;\n  modifyInquiry?: boolean;\n}\n\n// Exportez aussi les valeurs par défaut\nexport const DefaultInquiryTypeRights: Record<string, InquiryTypeRights> = {\n  proposal: { \n    supportInquiry: true, \n    commentInquiry: true, \n    attachFileInquiry: true, \n    shareInquiry: true,\n    editorType: 'wysiwyg' \n  },\n  debate: { \n    supportInquiry: true, \n    commentInquiry: false, \n    attachFileInquiry: false, \n    shareInquiry: true,\n    editorType: 'texteditor' \n  },\n  petition: { \n    supportInquiry: true, \n    commentInquiry: true, \n    attachFileInquiry: true, \n    shareInquiry: true,\n    editorType: 'wysiwyg' \n  },\n  project: { \n    supportInquiry: true, \n    commentInquiry: true, \n    attachFileInquiry: true, \n    shareInquiry: true,\n    editorType: 'texteditor' \n  },\n  grievance: { \n    supportInquiry: true, \n    commentInquiry: true, \n    attachFileInquiry: true, \n    shareInquiry: true,\n    editorType: 'wysiwyg' \n  },\n  suggestion: { \n    supportInquiry: true, \n    commentInquiry: false, \n    attachFileInquiry: false, \n    shareInquiry: true,\n    editorType: 'textarea' \n  },\n  official: { \n    supportInquiry: false, \n    commentInquiry: false, \n    attachFileInquiry: true, \n    shareInquiry: true,\n    editorType: 'textarea' \n  }\n};\n\nexport const DefaultModeratorRights: ModeratorRights = {\n  changeInquiryStatus: true,\n  deleteInquiry: true,\n  archiveInquiry: true,\n  transferInquiry: true,\n  modifyInquiry: true,\n  addShares: true,\n  addSharesExternal: false,\n  deanonymize: false,\n};\n\nexport const DefaultOfficialRights: OfficialRights = {\n  changeInquiryStatus: false,\n  deleteInquiry: false,\n  archiveInquiry: false,\n  transferInquiry: false,\n  modifyInquiry: false\n};\n\n/**\n * User TYPE \n */\nexport enum UserType {\n  Guest = 'guest',\n  User = 'user',\n  Moderator = 'moderator',\n  Admin = 'admin',\n  Owner = 'owner'\n}\n\n/**\n * Content type\n */\nexport enum ContentType {\n  Inquiry = 'inquiry',\n  Comment = 'comment',\n  Support = 'support',\n  Attachment = 'attachment',\n  Share = 'share'\n}\n\n/**\n * Interface rights permission \n */\nexport interface PermissionContext {\n  userType: UserType;\n  contentType: ContentType;\n  isOwner: boolean;\n  isPublic: boolean;\n  isLocked: boolean;\n  isExpired: boolean;\n  isDeleted: boolean;\n  isArchived: boolean;\n  hasGroupRestrictions: boolean;\n  userGroups: string[];\n  allowedGroups: string[];\n  inquiryType?: string; \n}\n\n// GET METHODS\n\nfunction getCurrentUserType(): UserType {\n  const sessionStore = useSessionStore();\n  const currentUser = sessionStore.currentUser;\n  \n  if (!currentUser) return UserType.Guest;\n  if (currentUser.isAdmin) return UserType.Admin;\n  if (currentUser.isModerator) return UserType.Moderator;\n  if (currentUser.isOfficial) return UserType.User;\n  return UserType.User;\n}\n\nfunction getCurrentUserGroups(): string[] {\n  const sessionStore = useSessionStore();\n  const currentUser = sessionStore.currentUser;\n  return currentUser?.groups || [];\n}\n\nexport function getCurrentModeratorRights(): ModeratorRights | null {\n  const sessionStore = useSessionStore();\n  const appSettings = useAppSettingsStore(); \n  const currentUser = sessionStore.currentUser;\n  return currentUser?.isModerator ? appSettings.moderatorRights : null;\n}\n\nexport function getCurrentOfficialRights(): OfficialRights | null {\n  const sessionStore = useSessionStore();\n  const appSettings = useAppSettingsStore(); \n  const currentUser = sessionStore.currentUser;\n  return currentUser?.isOfficial ? appSettings.officialRights : null;\n}\n\nfunction isContentOwner(contentOwnerId: string): boolean {\n  const sessionStore = useSessionStore();\n  const currentUser = sessionStore.currentUser;\n  return currentUser?.id === contentOwnerId;\n}\n\nexport function canInquiryTypePerformAction(inquiryType: string, action: keyof InquiryTypeSettings): boolean {\n  const sessionStore = useSessionStore();\n  const typeRights = sessionStore.appSettings.inquiryTypeRights[inquiryType];\n  return typeRights?.[action] ?? false;\n}\n\nfunction hasGroupAccess(context: PermissionContext): boolean {\n  if (!context.hasGroupRestrictions || context.userType === UserType.Guest) {\n    return true;\n  }\n  \n  // Les admins et modérateurs bypassent les restrictions de groupe\n  if (context.userType === UserType.Admin || context.userType === UserType.Moderator) {\n    return true;\n  }\n  \n  return context.userGroups.some(group => context.allowedGroups.includes(group));\n}\n\nfunction isContentBlocked(context: PermissionContext): boolean {\n  return context.isArchived || context.isDeleted || context.isLocked || context.isExpired;\n}\n\n/**\n * Vérifie si l'utilisateur peut voir le menu toggle\n * Seulement Admin, Owner, Moderator, Official\n */\nexport function canViewToggle(context: PermissionContext): boolean {\n  return [\n    UserType.Admin, \n    UserType.Owner, \n    UserType.Moderator, \n    UserType.User\n  ].includes(context.userType);\n}\n\n/**\n * Vérifie si l'utilisateur peut supprimer\n * Admin et Owner toujours, autres selon leurs droits\n */\nexport function canDelete(context: PermissionContext): boolean {\n  if (context.isDeleted) return false;\n  \n  if (context.userType === UserType.Admin || context.isOwner) {\n    return true;\n  }\n\n  if (context.userType === UserType.Moderator) {\n    const moderatorRights = getCurrentModeratorRights();\n    return moderatorRights?.deleteInquiry ?? false;\n  }\n\n  if (context.userType === UserType.User) {\n    const officialRights = getCurrentOfficialRights();\n    return officialRights?.deleteInquiry ?? false;\n  }\n\n  return false;\n}\n\n/**\n * Vérifie si l'utilisateur peut archiver\n * Admin et Owner toujours, autres selon leurs droits\n */\nexport function canRestore(context: PermissionContext): boolean {\n  if (!(context.isArchived || context.isDeleted)) return false;\n  \n  if (context.userType === UserType.Admin || context.isOwner) {\n    return true;\n  }\n\n  if (context.userType === UserType.Moderator) {\n    const moderatorRights = getCurrentModeratorRights();\n    return moderatorRights?.archiveInquiry ?? false;\n  }\n\n  if (context.userType === UserType.User) {\n    const officialRights = getCurrentOfficialRights();\n    return officialRights?.archiveInquiry ?? false;\n  }\n\n  return false;\n}\n\n\n/**\n * Vérifie si l'utilisateur peut archiver\n * Admin et Owner toujours, autres selon leurs droits\n */\nexport function canArchive(context: PermissionContext): boolean {\n  if (context.isArchived || context.isDeleted) return false;\n  \n  if (context.userType === UserType.Admin || context.isOwner) {\n    return true;\n  }\n\n  if (context.userType === UserType.Moderator) {\n    const moderatorRights = getCurrentModeratorRights();\n    return moderatorRights?.archiveInquiry ?? false;\n  }\n\n  if (context.userType === UserType.User) {\n    const officialRights = getCurrentOfficialRights();\n    return officialRights?.archiveInquiry ?? false;\n  }\n\n  return false;\n}\n\n/**\n * Vérifie si l'utilisateur peut transférer\n * Admin et Owner toujours, autres selon leurs droits\n */\nexport function canTransfer(context: PermissionContext): boolean {\n  if (context.userType === UserType.Admin || context.isOwner) {\n    return true;\n  }\n\n  if (context.userType === UserType.Moderator) {\n    const moderatorRights = getCurrentModeratorRights();\n    return moderatorRights?.transferInquiry ?? false;\n  }\n\n  if (context.userType === UserType.User) {\n    const officialRights = getCurrentOfficialRights();\n    return officialRights?.transferInquiry ?? false;\n  }\n\n  return false;\n}\n\n/**\n * Vérifie si l'utilisateur peut modérer\n * Admin toujours, Moderator selon droits, Official selon droits\n */\nexport function canModerate(context: PermissionContext): boolean {\n  if (context.userType === UserType.Admin) {\n    return true;\n  }\n\n  if (context.userType === UserType.Moderator) {\n    const moderatorRights = getCurrentModeratorRights();\n    return moderatorRights?.changeInquiryStatus ?? false;\n  }\n\n  if (context.userType === UserType.User) {\n    const officialRights = getCurrentOfficialRights();\n    return officialRights?.changeInquiryStatus ?? false;\n  }\n\n  return false;\n}\n\n/**\n * Vérifie si l'utilisateur peut éditer\n * Admin et Owner toujours, autres selon leurs droits\n */\nexport function canEdit(context: PermissionContext): boolean {\n  if (context.isLocked || context.isArchived || context.isDeleted) {\n    return false;\n  }\n  if (context.userType === UserType.Admin || context.isOwner) {\n    return true;\n  }\n\n  if (context.userType === UserType.Moderator) {\n    const moderatorRights = getCurrentModeratorRights();\n    return moderatorRights?.modifyInquiry ?? false;\n  }\n\n  if (context.userType === UserType.User) {\n    const officialRights = getCurrentOfficialRights();\n    return officialRights?.modifyInquiry ?? false;\n  }\n\n  return false;\n}\n\n/**\n * Vérifie si l'utilisateur peut commenter\n * Dépend des droits InquiryTypeRights, même pour les Admins\n */\nexport function canComment(context: PermissionContext): boolean {\n  const appSettings = useAppSettingsStore();\n  \n  if (isContentBlocked(context)) {\n    return false;\n  }\n\n  if (context.inquiryType && !canInquiryTypePerformAction(context.inquiryType, 'commentInquiry')) {\n    return false;\n  }\n\n  if (!hasGroupAccess(context)) {\n    return false;\n  }\n\n  if (context.userType === UserType.Guest) {\n    return context.isPublic && appSettings.allowGuestComments;\n  }\n\n  return true;\n}\n\n/**\n * Vérifie si l'utilisateur peut supporter\n * Dépend des droits InquiryTypeRights, même pour les Admins\n */\nexport function canSupport(context: PermissionContext): boolean {\n  const appSettings = useSessionStore().appSettings;\n\n  if (isContentBlocked(context)) {\n    return false;\n  }\n\n  if (context.inquiryType && !canInquiryTypePerformAction(context.inquiryType, 'supportInquiry')) {\n    return false;\n  }\n  if (!hasGroupAccess(context)) {\n    return false;\n  }\n\n  if (context.userType === UserType.Guest) {\n    return context.isPublic && appSettings.allowGuestSupport;\n  }\n\n  return true;\n}\n\n/**\n * Vérifie si l'utilisateur peut partager\n * Dépend des droits InquiryTypeRights, même pour les Admins\n */\nexport function canShare(context: PermissionContext): boolean {\n  const appSettings = useAppSettingsStore();\n  \n  if (context.isArchived || context.isDeleted) {\n    return false;\n  }\n\n  if (context.inquiryType && !canInquiryTypePerformAction(context.inquiryType, 'shareInquiry')) {\n    return false;\n  }\n\n  if (!appSettings.allowSharing) {\n    return false;\n  }\n\n  if (context.userType === UserType.Guest) {\n    return false;\n  }\n\n  return canModerate(context); // Le partage nécessite généralement des droits de modération\n}\n\n/**\n * Vérifie si l'utilisateur peut attacher des fichiers\n * Dépend des droits InquiryTypeRights, même pour les Admins\n */\nexport function canAttachFile(context: PermissionContext): boolean {\n  \n  if (context.isArchived || context.isDeleted || context.isLocked) {\n    return false;\n  }\n\n  if (context.inquiryType && !canInquiryTypePerformAction(context.inquiryType, 'attachFileInquiry')) {\n    return false;\n  }\n\n  if (!hasGroupAccess(context)) {\n    return false;\n  }\n\n  if (context.userType === UserType.Guest) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canView(context: PermissionContext): boolean {\n  const appSettings = useAppSettingsStore();\n  \n  if (context.isDeleted) {\n    return [UserType.Moderator, UserType.Admin, UserType.Owner].includes(context.userType);\n  }\n\n  if (context.isArchived) {\n    return [UserType.Moderator, UserType.Admin, UserType.Owner, UserType.User].includes(context.userType);\n  }\n\n  if (context.hasGroupRestrictions) {\n    if (!hasGroupAccess(context) && context.userType !== UserType.Admin && context.userType !== UserType.Moderator) {\n      return false;\n    }\n  }\n\n  if (context.userType === UserType.Guest) {\n    return context.isPublic && appSettings.allowPublicAccess;\n  }\n\n  return true;\n}\n\nexport function canCreate(context: PermissionContext): boolean {\n  const appSettings = useAppSettingsStore();\n  \n  if (context.userType === UserType.Guest) {\n    return appSettings.allowGuestCreation;\n  }\n  return true;\n}\n\nexport function canLock(context: PermissionContext): boolean {\n  return [UserType.Moderator, UserType.Admin].includes(context.userType);\n}\n\nexport function createPermissionContextForContent(\n  contentType: ContentType,\n  contentOwnerId: string,\n  isPublic: boolean = true,\n  isLocked: boolean = false,\n  isExpired: boolean = false,\n  isDeleted: boolean = false,\n  isArchived: boolean = false,\n  hasGroupRestrictions: boolean = false,\n  allowedGroups: string[] = [],\n  inquiryType?: string\n): PermissionContext {\n  const userType = getCurrentUserType();\n  const userGroups = getCurrentUserGroups();\n  const isOwner = isContentOwner(contentOwnerId);\n  \n  return {\n    userType,\n    contentType,\n    isOwner,\n    isPublic,\n    isLocked,\n    isExpired,\n    isDeleted,\n    isArchived,\n    hasGroupRestrictions,\n    userGroups,\n    allowedGroups,\n    inquiryType\n  };\n}\n\nexport default {\n  // Enums\n  UserType,\n  ContentType,\n  \n  // Default values\n  DefaultInquiryTypeRights,\n  DefaultModeratorRights,\n  DefaultOfficialRights,\n  \n  // Permission functions\n  canView,\n  canViewToggle,\n  canComment,\n  canSupport,\n  canShare,\n  canAttachFile,\n  canDelete,\n  canArchive,\n  canRestore,\n  canTransfer,\n  canModerate,\n  canEdit,\n  canCreate,\n  canLock,\n  \n  // Context functions\n  createPermissionContextForContent,\n  \n  // Helper functions\n  getCurrentUserType,\n  getCurrentUserGroups,\n  getCurrentModeratorRights,\n  getCurrentOfficialRights,\n  canInquiryTypePerformAction\n};\n","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { defineStore } from 'pinia';\nimport { AppSettingsAPI } from '../Api/index.ts';\nimport { Logger } from '../helpers/index.ts';\nimport { BaseEntry } from '../Type/index.ts';\nimport { AxiosError } from '@nextcloud/axios';\n\nimport type {\n  InquiryTypeRights,\n  ModeratorRights,\n  OfficialRights\n} from '../utils/permissions.ts';\n\nimport {\n  DefaultModeratorRights,\n  DefaultOfficialRights\n} from '../utils/permissions.ts';\n\n\n\nexport type UpdateType =\n  | 'noInquirying'\n  | 'periodicInquirying'\n  | 'longInquirying';\n\nexport type Group = {\n  id: string;\n  userId: string;\n  displayName: string;\n  emailAddress: string;\n  isNoUser: boolean;\n  type: string;\n};\n\n// Simple interfaces for category and location tables\nexport interface Category {\n  id: number;\n  name: string;\n  parentId: number | null;\n}\n\nexport interface Location {\n  id: number;\n  name: string;\n  parentId: number | null;\n}\n\nexport interface ModerationStatus {\n  id: number;\n  inquiryType: string;\n  statusKey: string;\n  label: string;\n  description?: string;\n  isFinal: boolean;\n  icon: string;\n  order?: number;\n}\n\nexport type AppSettings = {\n  allAccessGroups: string[];\n  allowCombo: boolean;\n  allowPublicShares: boolean;\n  allowAllAccess: boolean;\n  allowInquiryCreation: boolean;\n  allowInquiryDownload: boolean;\n  autoArchive: boolean;\n  autoArchiveOffset: number;\n  autoDelete: boolean;\n  autoDeleteOffset: number;\n  defaultPrivacyUrl: string;\n  defaultImprintUrl: string;\n  disclaimer: string;\n  imprintUrl: string;\n  legalTermsInEmail: boolean;\n  privacyUrl: string;\n  showMailAddresses: boolean;\n  showLogin: boolean;\n  unrestrictedOwner: boolean;\n  updateType: UpdateType;\n  useActivity: boolean;\n  useCollaboration: boolean;\n  useSiteLegalTerms: boolean;\n  navigationInquiriesInList: boolean;\n  finalPrivacyUrl: string;\n  finalImprintUrl: string;\n  comboGroups: string[];\n  publicSharesGroups: string[];\n  inquiryCreationGroups: string[];\n  inquiryDownloadGroups: string[];\n  showMailAddressesGroups: string[];\n  unrestrictedOwnerGroups: string[];\n  categoryTab: Category[];\n  locationTab: Location[];\n  moderationStatusTab: ModerationStatus[];\n  groups: Group[];\n  inquiryTypeRights: Record<string, InquiryTypeRights>;\n  moderatorRights: ModeratorRights;\n  officialRights: OfficialRights;\n  status: {\n    loadingGroups: boolean;\n  };\n};\n\nexport const useAppSettingsStore = defineStore('appSettings', {\n  state: (): AppSettings => ({\n    allAccessGroups: [],\n    allowCombo: true,\n    allowPublicShares: true,\n    allowAllAccess: true,\n    allowInquiryCreation: true,\n    allowInquiryDownload: true,\n    autoArchive: false,\n    autoDelete: false,\n    autoArchiveOffset: 30,\n    autoDeleteOffset: 30,\n    defaultPrivacyUrl: '',\n    defaultImprintUrl: '',\n    disclaimer: '',\n    imprintUrl: '',\n    legalTermsInEmail: false,\n    privacyUrl: '',\n    showMailAddresses: false,\n    showLogin: true,\n    unrestrictedOwner: false,\n    updateType: 'noInquirying',\n    useActivity: false,\n    useCollaboration: true,\n    useSiteLegalTerms: true,\n    navigationInquiriesInList: true,\n    finalPrivacyUrl: '',\n    finalImprintUrl: '',\n    comboGroups: [],\n    publicSharesGroups: [],\n    inquiryCreationGroups: [],\n    inquiryDownloadGroups: [],\n    showMailAddressesGroups: [],\n    unrestrictedOwnerGroups: [],\n    categoryTab: [],\n    locationTab: [],\n    moderationStatusTab: [],\n    groups: [],\n    inquiryTypeRights: {} as Record<string,InquiryTypeRights>,\n    moderatorRights: { ...DefaultModeratorRights } as ModeratorRights,\n    officialRights: { ...DefaultOfficialRights } as OfficialRights,\n    status: {\n      loadingGroups: false\n    }\n  }),\n\n  actions: {\n    async load(): Promise<void> {\n      try {\n        const response = await AppSettingsAPI.getAppSettings();\n        // Initialize moderationStatusTab with defaults if empty\n        const settings = response.data.appSettings;\n\n        this.$patch(settings);\n        return settings;\n      } catch (error) {\n        Logger.error('Error getting appSettings', { error });\n      }\n    },\n\n    async write(): Promise<void> {\n      try {\n        const response = await AppSettingsAPI.writeAppSettings(this.$state);\n        this.$patch(response.data.appSettings);\n      } catch (error) {\n        if ((error as AxiosError)?.code === 'ERR_CANCELED') {\n          return;\n        }\n        Logger.error('Error writing appSettings', {\n          error,\n          appSettings: this.$state\n        });\n        throw error;\n      }\n    },\n\n    loadGroups(query: string): void {\n      const debouncedLoad = this.$debounce(async () => {\n        this.status.loadingGroups = true;\n\n        try {\n          const response = await AppSettingsAPI.getGroups(query);\n          this.groups = response.data.groups;\n          this.status.loadingGroups = false;\n        } catch (error) {\n          if ((error as AxiosError)?.code === 'ERR_CANCELED') {\n            return;\n          }\n          Logger.error('Error getting groups', { error });\n          this.status.loadingGroups = false;\n        }\n      }, 500);\n\n      debouncedLoad();\n    },\n    // STORE FOR MODERATION STATUS\n\n    // Get statuses for a specific inquiry type\n    getStatusesForInquiryType(inquiryType: string): ModerationStatus[] {\n      return this.moderationStatusTab\n        .filter((status) => status.inquiryType === inquiryType)\n        .sort((a, b) => (a.order || 0) - (b.order || 0));\n    },\n\n    // Add a new status for an inquiry type\n    async addStatusForInquiryType(\n      inquiryType: string,\n      status: Omit<ModerationStatus, 'inquiryType' | 'order'>\n    ): Promise<void> {\n      const existingStatuses = this.getStatusesForInquiryType(inquiryType);\n      const newOrder = existingStatuses.length;\n      const newStatus = {\n        inquiryType,\n        ...status,\n        order: newOrder\n      };\n\n      try {\n        const response = await AppSettingsAPI.addModerationStatus(newStatus);\n        if (response.data.moderationStatus) {\n          this.moderationStatusTab.push(response.data.moderationStatus);\n        } else {\n          this.moderationStatusTab.push(newStatus);\n        }\n      } catch (error) {\n        Logger.error('Error adding moderation status', { error });\n        this.moderationStatusTab.push(newStatus);\n      }\n    },\n\n    // Update a status for an inquiry type\n    async updateStatusForInquiryType(\n      inquiryType: string,\n      statusId: string,\n      updates: Partial<ModerationStatus>\n    ): Promise<void> {\n      const index = this.moderationStatusTab.findIndex(\n        (s) => s.inquiryType === inquiryType && s.id === statusId\n      );\n\n      if (index === -1) {\n        return;\n      }\n      const originalStatus = { ...this.moderationStatusTab[index] };\n      this.moderationStatusTab[index] = {\n        ...this.moderationStatusTab[index],\n        ...updates\n      };\n\n      try {\n        await AppSettingsAPI.updateModerationStatus(statusId, {\n          ...originalStatus,\n          ...updates\n        });\n      } catch (error) {\n        Logger.error('Error updating moderation status', { error });\n        this.moderationStatusTab[index] = originalStatus;\n      }\n    },\n\n    // Delete a status for an inquiry type\n    async deleteStatusForInquiryType(\n      inquiryType: string,\n      statusId: string\n    ): Promise<void> {\n      this.moderationStatusTab = this.moderationStatusTab.filter(\n        (s) => !(s.inquiryType === inquiryType && s.id === statusId)\n      );\n      // Reorder remaining statuses\n      this.reorderStatuses(inquiryType);\n      try {\n        await AppSettingsAPI.deleteModerationStatus(statusId);\n      } catch (error) {\n        Logger.error('Error deleting moderation status', { error });\n        this.moderationStatusTab.splice(backupIndex, 0, backupStatus);\n        this.reorderStatuses(inquiryType);\n      }\n    },\n\n    // Reorder statuses for an inquiry type\n    reorderStatuses(inquiryType: string): void {\n      const statuses = this.getStatusesForInquiryType(inquiryType);\n      statuses.forEach((status, index) => {\n        const globalIndex = this.moderationStatusTab.findIndex(\n          (s) => s.inquiryType === inquiryType && s.id === status.statusId\n        );\n        if (globalIndex !== -1) {\n          this.moderationStatusTab[globalIndex].order = index;\n        }\n      });\n    },\n\n    // Move status up in order\n    moveStatusUp(inquiryType: string, statusId: string): void {\n      const statuses = this.getStatusesForInquiryType(inquiryType);\n      const currentIndex = statuses.findIndex((s) => s.id === statusId);\n\n      if (currentIndex > 0) {\n        // Swap orders with previous status\n        const previousStatus = statuses[currentIndex - 1];\n        const currentStatus = statuses[currentIndex];\n\n        // Update orders in the main array\n        const previousGlobalIndex = this.moderationStatusTab.findIndex(\n          (s) =>\n            s.inquiryType === inquiryType &&\n            s.statusId === previousStatus.statusId\n        );\n        const currentGlobalIndex = this.moderationStatusTab.findIndex(\n          (s) =>\n            s.inquiryType === inquiryType &&\n            s.statusId === currentStatus.statusId\n        );\n\n        if (previousGlobalIndex !== -1 && currentGlobalIndex !== -1) {\n          const tempOrder = this.moderationStatusTab[currentGlobalIndex].order;\n          this.moderationStatusTab[currentGlobalIndex].order =\n            this.moderationStatusTab[previousGlobalIndex].order;\n          this.moderationStatusTab[previousGlobalIndex].order = tempOrder;\n        }\n\n        // Reorder to ensure consistency\n        this.reorderStatuses(inquiryType);\n      }\n    },\n\n    // Move status down in order\n    moveStatusDown(inquiryType: string, statusId: string): void {\n      const statuses = this.getStatusesForInquiryType(inquiryType);\n      const currentIndex = statuses.findIndex((s) => s.id === statusId);\n\n      if (currentIndex < statuses.length - 1) {\n        // Swap orders with next status\n        const nextStatus = statuses[currentIndex + 1];\n        const currentStatus = statuses[currentIndex];\n\n        // Update orders in the main array\n        const nextGlobalIndex = this.moderationStatusTab.findIndex(\n          (s) =>\n            s.inquiryType === inquiryType && s.statusId === nextStatus.statusId\n        );\n        const currentGlobalIndex = this.moderationStatusTab.findIndex(\n          (s) =>\n            s.inquiryType === inquiryType &&\n            s.statusId === currentStatus.statusId\n        );\n\n        if (nextGlobalIndex !== -1 && currentGlobalIndex !== -1) {\n          const tempOrder = this.moderationStatusTab[currentGlobalIndex].order;\n          this.moderationStatusTab[currentGlobalIndex].order =\n            this.moderationStatusTab[nextGlobalIndex].order;\n          this.moderationStatusTab[nextGlobalIndex].order = tempOrder;\n        }\n\n        // Reorder to ensure consistency\n        this.reorderStatuses(inquiryType);\n      }\n    },\n\n    // STORE FOR CATEGORY AND LOCATION MANAGEMENT\n    async addCategory(name: string, parentId: number = 0): Promise<void> {\n      const maxId =\n        this.categoryTab.length > 0\n          ? Math.max(...this.categoryTab.map((c) => c.id))\n          : 0;\n      const newId = maxId + 1;\n\n      try {\n        await AppSettingsAPI.addCategory({\n          name,\n          parentId\n        });\n\n\n        this.categoryTab.push({\n          id: newId,\n          name,\n          parentId\n        });\n      } catch (error) {\n        Logger.error('Error getting appSettings', { error });\n      }\n    },\n\n    async updateCategory(\n      id: number,\n      name: string,\n      parentId: number\n    ): Promise<void> {\n      const category = this.categoryTab.find((c) => c.id === id);\n      try {\n        await AppSettingsAPI.updateCategory(\n          id,\n          name,\n          parentId\n        );\n\n        if (category) {\n          category.name = name;\n          category.parentId = parentId;\n        }\n      } catch (error) {\n        Logger.error('Error getting appSettings', { error });\n      }\n    },\n\n    async deleteCategory(id: number): Promise<void> {\n      const deleteRecursive = (categoryId: number) => {\n        const children = this.categoryTab.filter(\n          (c) => c.parentId === categoryId\n        );\n\n        children.forEach((child) => {\n          deleteRecursive(child.id);\n        });\n\n        this.categoryTab = this.categoryTab.filter((c) => c.id !== categoryId);\n      };\n      try {\n        await AppSettingsAPI.deleteCategory(id);\n        deleteRecursive(id);\n      } catch (error) {\n        Logger.error('Error deleting category', { error });\n      }\n    },\n\n    async addLocation(name: string, parentId: number = 0): Promise<void> {\n      const maxId =\n        this.locationTab.length > 0\n          ? Math.max(...this.locationTab.map((l) => l.id))\n          : 0;\n      const newId = maxId + 1;\n\n      try {\n        await AppSettingsAPI.addLocation({\n          name,\n          parentId\n        });\n\n\n        this.locationTab.push({\n          id: newId,\n          name,\n          parentId\n        });\n      } catch (error) {\n        Logger.error('Error getting appSettings', { error });\n      }\n    },\n\n    async updateLocation(\n      id: number,\n      name: string,\n      parentId: number\n    ): Promise<void> {\n      const location = this.locationTab.find((l) => l.id === id);\n      try {\n        await AppSettingsAPI.updateLocation(\n          id,\n          name,\n          parentId\n        );\n\n        if (location) {\n          location.name = name;\n          location.parentId = parentId;\n        }\n      } catch (error) {\n        Logger.error('Error getting appSettings', { error });\n      }\n    },\n\n    async deleteLocation(id: number): Promise<void> {\n      const deleteRecursive = (locationId: number) => {\n        const children = this.locationTab.filter(\n          (l) => l.parentId === locationId\n        );\n\n        children.forEach((child) => {\n          deleteRecursive(child.id);\n        });\n\n        this.locationTab = this.locationTab.filter((l) => l.id !== locationId);\n      };\n\n      try {\n        await AppSettingsAPI.deleteLocation(id);\n\n        deleteRecursive(id);\n      } catch (error) {\n        Logger.error('Error deleting location', { error });\n      }\n    },\n\n    // Helper to build tree structure from flat list\n    buildTree<T extends { id: number; parentId: number }>(\n      items: T[],\n      parentId: number = 0\n    ): (T & { children: T[] })[] {\n      return items\n        .filter((item) => item.parentId === parentId)\n        .map((item) => ({\n          ...item,\n          children: this.buildTree(items, item.id)\n        }));\n    },\n\n    // Get parent options for select dropdowns\n    getParentOptions(\n      type: 'category' | 'location',\n      excludeId: number | null = null\n    ) {\n      const items = type === 'category' ? this.categoryTab : this.locationTab;\n      const tree = this.buildTree(items);\n\n      const options = [{ id: 0, name: 'No parent' }];\n\n      const flattenTree = (nodes: BaseEntry[], level = 0) => {\n        let results: BaseEntry[] = [];\n        nodes.forEach((node) => {\n          if (node.id !== excludeId) {\n            results.push({\n              id: node.id,\n              name: `${'--'.repeat(level)} ${node.name}`\n            });\n          }\n          if (node.children && node.children.length > 0) {\n            results = results.concat(flattenTree(node.children, level + 1));\n          }\n        });\n        return results;\n      };\n\n      return options.concat(flattenTree(tree));\n    }\n  }\n});\n","<!--\n  - SPDX-FileCopyrightText: 2018 Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<script setup lang=\"ts\">\nimport NcNoteCard from '@nextcloud/vue/components/NcNoteCard';\n</script>\n\n<template>\n  <NcNoteCard v-bind=\"$attrs\">\n    <div class=\"card-content\">\n      <div class=\"left-card-side\">\n        <slot name=\"default\" />\n      </div>\n      <div class=\"right-card-side\">\n        <slot name=\"button\" />\n      </div>\n    </div>\n  </NcNoteCard>\n</template>\n\n<style lang=\"scss\">\n.left-card-side {\n  flex: 1 0 180px;\n  ul {\n    list-style: initial;\n    margin-inline-start: 2rem;\n  }\n}\n\n.right-card-side {\n  flex: 0;\n  padding-inline-end: 8px;\n}\n\n.notecard {\n  & > * {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .card-content {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    flex: 1;\n    column-gap: 8px;\n  }\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2018 Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\n\nimport NcCheckboxRadioSwitch from '@nextcloud/vue/components/NcCheckboxRadioSwitch';\n\nexport type CheckboxOption = {\n  value: string;\n  label: string;\n};\n\ninterface Props {\n  id?: string;\n  options: CheckboxOption[];\n}\n\nconst { id, options } = defineProps<Props>();\nconst model = defineModel<string>({ required: true });\n\nconst RandId = () =>\n  Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, '')\n    .slice(2, 12);\n\nconst emit = defineEmits(['update']);\n\nconst elementId = computed(() => id ?? `rg-${RandId()}`);\n</script>\n\n<template>\n  <div class=\"radio-group-div\">\n    <NcCheckboxRadioSwitch\n      v-for=\"(option, index) in options\"\n      :key=\"option.value\"\n      v-model=\"model\"\n      :value=\"option.value\"\n      :name=\"elementId + index\"\n      type=\"radio\"\n      @update:model-value=\"emit('update')\"\n    >\n      {{ option.label }}\n    </NcCheckboxRadioSwitch>\n  </div>\n</template>\n"],"names":["_hoisted_1","_hoisted_2","_hoisted_3","_sfc_main","defineComponent","__props","props","shouldShowAlert","computed","iconPath","mdiAlertDecagram","mdiCheckboxMarkedCircle","mdiInformation","mdiAlert","_ctx","_cache","openBlock","createElementBlock","normalizeClass","renderSlot","createVNode","unref","NcIconSvgWrapper","createElementVNode","toDisplayString","createCommentVNode","NcNoteCard","_export_sfc","DefaultModeratorRights","DefaultOfficialRights","ContentType","getCurrentUserType","currentUser","useSessionStore","getCurrentUserGroups","getCurrentModeratorRights","sessionStore","appSettings","useAppSettingsStore","getCurrentOfficialRights","isContentOwner","contentOwnerId","canInquiryTypePerformAction","inquiryType","action","hasGroupAccess","context","group","isContentBlocked","canDelete","canRestore","canArchive","canTransfer","canEdit","canComment","canSupport","createPermissionContextForContent","contentType","isPublic","isLocked","isExpired","isDeleted","isArchived","hasGroupRestrictions","allowedGroups","userType","userGroups","isOwner","defineStore","settings","AppSettingsAPI","error","Logger","response","query","status","a","b","newOrder","newStatus","statusId","updates","index","s","originalStatus","globalIndex","statuses","currentIndex","previousStatus","currentStatus","previousGlobalIndex","currentGlobalIndex","tempOrder","nextStatus","nextGlobalIndex","name","parentId","newId","c","id","category","deleteRecursive","categoryId","child","l","location","locationId","items","item","type","excludeId","tree","options","flattenTree","nodes","level","results","node","_openBlock","_createBlock","_unref","$attrs","_createElementVNode","_renderSlot","model","_useModel","RandId","emit","__emit","elementId","_createElementBlock","_Fragment","_renderList","option","NcCheckboxRadioSwitch","$event","_createTextVNode","_toDisplayString"],"mappings":"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","x_google_ignoreList":[0]}